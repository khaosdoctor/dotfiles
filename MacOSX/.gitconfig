[init]
	defaultBranch = main
[user]
  name = Lucas Santos
  email = lhs.santoss@gmail.com
  signingkey = BD0849CA3F711BD5
[core]
  autocrlf = false
  eol = lf
  editor = vim
  ignorecase = false
[credential]
  helper = store
[alias]
  st = status
  s = switch
  co = "!f() { if [ -z \"$1\" ]; then git cor; else git checkout $1; fi; }; f"
  cob = checkout -b
  ps = push
  pl = pull
  cm = commit
  browse = !sh -c 'gh repo view --web' -
  cmps= !sh -c 'git commit && git push' -
  ca = !sh -c 'git add -A && git commit' -
  caps= !sh -c 'git ca && git ps' -
  bump = !sh -c 'git add -A && git commit -m "bump" --no-verify'
  br = branch
  publish = "!f() { git push -u origin $(git rev-parse --abbrev-ref HEAD); }; f"
  bd = !git branch --format='%(refname:short)' | (grep -v $(git rev-parse --abbrev-ref HEAD) > /dev/null) && (git branch --format='%(refname:short)' | grep -v $(git rev-parse --abbrev-ref HEAD) | ipt -am -M \"Select local branches to delete:\" | xargs git branch -d) || echo "You are checked in to the only available branch"
  col = !git branch --format='%(refname:short)' | (grep -v $(git rev-parse --abbrev-ref HEAD) > /dev/null) && (git branch --format='%(refname:short)' | grep -v $(git rev-parse --abbrev-ref HEAD) | ipt -a -M \"Choose a local branch to checkout:\" | xargs git checkout) || echo "You are checked in to the only available branch"
  cor = !git branch -r | grep -v "HEAD" | sed \"s/origin\\///g\" | ipt -a -M \"Choose a remote branch to checkout:\" | xargs git checkout
  lg1 = log --oneline --decorate --pretty='format:%C(bold yellow)%h %C(dim white)|%C(reset)%C(bold red)%d %C(reset)%s %C(italic dim green)(%as)%Creset %Cblue<%aN>'
  tree = log --all --graph --decorate --date=relative --pretty='format:%C(bold yellow)%h%Creset%C(bold red)%d %Creset%s %Cgreen(%ad) %Cblue<%aN> %C(dim white)[Key: %GK]'
[push]
  default = simple
  followTags = true
[rerere]
  enabled = true
[color]
  branch = auto
  diff = auto
  status = auto
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[diff]
  mnemonicprefix = true
  tool = vscode-diff
	colorMoved = zebra
[difftool "vscode-diff"]
  cmd = code --diff $LOCAL $REMOTE
[gpg]
	program = /usr/local/MacGPG2/bin/gpg
[commit]
	gpgsign = true
[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
[pager]
  branch = false
[pull]
	rebase = true
[fetch]
	prune = true
